
@using bizapps_test.MVC.Models
@model bizapps_test.MVC.Models.CommentViewModel
@{
    int parentId = Model.ParentId;
    if (Model.ParentId == 0)
    {
        parentId = Model.Id;
    }
}
<div style="margin-top: 20px; width: 100%;" class="comment-item">
    @*<%----------------------------------------------------------  comment item-------------------------------------------%>*@

    <p style="margin: 0; margin-bottom: 2px;">
        <b style="font-size: 12px; color: #474747;">@Html.DisplayFor(comment => comment.UserName, new { htmlAttributes = new { @class = "CommentUserName" } })</b>
        <i style="font-size: 10px; color: #c2c6cc;"> • </i>
        <span style="font-size: 11px; color: #999ea7;">@Html.DisplayFor(comment => comment.CreationDate, new { htmlAttributes = new { @class = "CommentDate" } })</span>
    </p>
    <p style="margin: 0; margin-bottom: 2px; width: 100%;" class="CommentText">
        @Html.DisplayFor(comment => comment.CommentText)   
    </p>
    @Html.HiddenFor(comment => comment.Id)
    @*<%-------------------------------------------------  div with control for editing-------------------------------------------%>*@
    @if (!string.IsNullOrEmpty(Model.ActiveUser))
    {
        if (Model.ActiveUser == Model.UserName)
        {
            Html.RenderAction("EditComment", "Comment", Model);
        }
        @*<%-------------------------------------------------  buttons for access to comment features-------------------------------------------%>*@

        using (Ajax.BeginForm("DeleteComment", "Comment", new AjaxOptions { UpdateTargetId = "ajaxcommentpanel" }))
        {
            if (Model.ActiveUser == Model.UserName)
            {
                <i style="font-size: 10px; color: #c2c6cc;"> • </i>
                <button class="button-open-modal" type="button" id="openEditForm" onclick="displayEditComment($(this));">Edit</button>
                <i style="font-size: 10px; color: #c2c6cc;"> • </i>
                <input type="submit" class="button-open-modal" onclick="return confirm('Are you sure you want to delete this comment? You cannot undo this action.')" id="openDeleteCommentModal" value="Delete" />
                @Html.HiddenFor(comment => comment.Id)
                @Html.HiddenFor(comment => comment.PostId)
            }
            <i style="font-size: 10px; color: #c2c6cc;"> • </i>
            <button class="button-open-modal" type="button" id="openReplyForm" onclick="displayReplyComment($(this));">Reply</button>
            <i style="font-size: 10px; color: #c2c6cc;"> • </i>
        }

        @*<%-------------------------------------------------  div with control for replying-------------------------------------------%>*@
        Html.RenderAction("ReplyComment", "Comment", new CommentViewModel { CommentText = Model.UserName + ",", ActiveUser = Model.ActiveUser, PostId = Model.PostId, ParentId = parentId });
    }

    @{
        Html.RenderAction("CommentChildList", "Comment", Model);
    }

</div>

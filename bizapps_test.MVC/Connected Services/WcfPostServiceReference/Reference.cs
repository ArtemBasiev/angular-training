//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bizapps_test.MVC.WcfPostServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostDC", Namespace="http://schemas.datacontract.org/2004/07/bizapps_test.SL.Wcf_Services.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class PostDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostImage {
            get {
                return this.PostImageField;
            }
            set {
                if ((object.ReferenceEquals(this.PostImageField, value) != true)) {
                    this.PostImageField = value;
                    this.RaisePropertyChanged("PostImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDC", Namespace="http://schemas.datacontract.org/2004/07/bizapps_test.SL.Wcf_Services.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CategoryDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfPostServiceReference.IWcfPostService")]
    public interface IWcfPostService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/CreatePost", ReplyAction="http://tempuri.org/IWcfPostService/CreatePostResponse")]
        int CreatePost(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, int userId, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/CreatePost", ReplyAction="http://tempuri.org/IWcfPostService/CreatePostResponse")]
        System.Threading.Tasks.Task<int> CreatePostAsync(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, int userId, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/UpdatePost", ReplyAction="http://tempuri.org/IWcfPostService/UpdatePostResponse")]
        int UpdatePost(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/UpdatePost", ReplyAction="http://tempuri.org/IWcfPostService/UpdatePostResponse")]
        System.Threading.Tasks.Task<int> UpdatePostAsync(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/DeletePost", ReplyAction="http://tempuri.org/IWcfPostService/DeletePostResponse")]
        int DeletePost(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/DeletePost", ReplyAction="http://tempuri.org/IWcfPostService/DeletePostResponse")]
        System.Threading.Tasks.Task<int> DeletePostAsync(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetUserPosts", ReplyAction="http://tempuri.org/IWcfPostService/GetUserPostsResponse")]
        bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetUserPosts(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetUserPosts", ReplyAction="http://tempuri.org/IWcfPostService/GetUserPostsResponse")]
        System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetUserPostsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetUserPostsByUserName", ReplyAction="http://tempuri.org/IWcfPostService/GetUserPostsByUserNameResponse")]
        bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetUserPostsByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetUserPostsByUserName", ReplyAction="http://tempuri.org/IWcfPostService/GetUserPostsByUserNameResponse")]
        System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetUserPostsByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetPostsByUserNameWithoutCategory", ReplyAction="http://tempuri.org/IWcfPostService/GetPostsByUserNameWithoutCategoryResponse")]
        bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetPostsByUserNameWithoutCategory(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetPostsByUserNameWithoutCategory", ReplyAction="http://tempuri.org/IWcfPostService/GetPostsByUserNameWithoutCategoryResponse")]
        System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetPostsByUserNameWithoutCategoryAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetPostsByUserNameAndCategory", ReplyAction="http://tempuri.org/IWcfPostService/GetPostsByUserNameAndCategoryResponse")]
        bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetPostsByUserNameAndCategory(string userName, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetPostsByUserNameAndCategory", ReplyAction="http://tempuri.org/IWcfPostService/GetPostsByUserNameAndCategoryResponse")]
        System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetPostsByUserNameAndCategoryAsync(string userName, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetPost", ReplyAction="http://tempuri.org/IWcfPostService/GetPostResponse")]
        bizapps_test.MVC.WcfPostServiceReference.PostDC GetPost(int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfPostService/GetPost", ReplyAction="http://tempuri.org/IWcfPostService/GetPostResponse")]
        System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC> GetPostAsync(int postId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfPostServiceChannel : bizapps_test.MVC.WcfPostServiceReference.IWcfPostService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfPostServiceClient : System.ServiceModel.ClientBase<bizapps_test.MVC.WcfPostServiceReference.IWcfPostService>, bizapps_test.MVC.WcfPostServiceReference.IWcfPostService {
        
        public WcfPostServiceClient() {
        }
        
        public WcfPostServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfPostServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfPostServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfPostServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreatePost(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, int userId, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC) {
            return base.Channel.CreatePost(postDC, userId, categoryListDC);
        }
        
        public System.Threading.Tasks.Task<int> CreatePostAsync(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, int userId, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC) {
            return base.Channel.CreatePostAsync(postDC, userId, categoryListDC);
        }
        
        public int UpdatePost(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC) {
            return base.Channel.UpdatePost(postDC, categoryListDC);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePostAsync(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC, bizapps_test.MVC.WcfPostServiceReference.CategoryDC[] categoryListDC) {
            return base.Channel.UpdatePostAsync(postDC, categoryListDC);
        }
        
        public int DeletePost(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC) {
            return base.Channel.DeletePost(postDC);
        }
        
        public System.Threading.Tasks.Task<int> DeletePostAsync(bizapps_test.MVC.WcfPostServiceReference.PostDC postDC) {
            return base.Channel.DeletePostAsync(postDC);
        }
        
        public bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetUserPosts(int userId) {
            return base.Channel.GetUserPosts(userId);
        }
        
        public System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetUserPostsAsync(int userId) {
            return base.Channel.GetUserPostsAsync(userId);
        }
        
        public bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetUserPostsByUserName(string userName) {
            return base.Channel.GetUserPostsByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetUserPostsByUserNameAsync(string userName) {
            return base.Channel.GetUserPostsByUserNameAsync(userName);
        }
        
        public bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetPostsByUserNameWithoutCategory(string userName) {
            return base.Channel.GetPostsByUserNameWithoutCategory(userName);
        }
        
        public System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetPostsByUserNameWithoutCategoryAsync(string userName) {
            return base.Channel.GetPostsByUserNameWithoutCategoryAsync(userName);
        }
        
        public bizapps_test.MVC.WcfPostServiceReference.PostDC[] GetPostsByUserNameAndCategory(string userName, int categoryId) {
            return base.Channel.GetPostsByUserNameAndCategory(userName, categoryId);
        }
        
        public System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC[]> GetPostsByUserNameAndCategoryAsync(string userName, int categoryId) {
            return base.Channel.GetPostsByUserNameAndCategoryAsync(userName, categoryId);
        }
        
        public bizapps_test.MVC.WcfPostServiceReference.PostDC GetPost(int postId) {
            return base.Channel.GetPost(postId);
        }
        
        public System.Threading.Tasks.Task<bizapps_test.MVC.WcfPostServiceReference.PostDC> GetPostAsync(int postId) {
            return base.Channel.GetPostAsync(postId);
        }
    }
}

{"version":3,"sources":["src/app/Adapters/BlogAdapter.ts","src/app/Models/Blog.ts","src/app/Services/blog/blog.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IAdapter } from './IAdapter';\r\nimport { Blog } from 'src/app/Models/Blog';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BlogAdapter implements IAdapter<Blog> {\r\n\r\n  adapt(item: any): Blog {\r\n    if(item==null) return null;\r\n\r\n    var blog = new Blog();\r\n    blog.Id = item.Id;\r\n    blog.BlogTitle = item.BlogTitle;\r\n    blog.BlogCategories = item.BlogCategories;\r\n    blog.BlogPosts = item.BlogPosts;\r\n    blog.CreationDate = new Date(item.CreationDate);\r\n    return blog;\r\n  }\r\n}","\r\nimport {Category} from 'src/app/Models/Category';\r\nimport { Post } from './Post';\r\nimport { User } from './User';\r\n\r\nexport class Blog {\r\n\r\n  public Id: number;\r\n\r\n  public BlogTitle: string;\r\n\r\n  public CreationDate: Date;\r\n\r\n  public BlogCategories: Array<Category> = new Array<Category>();\r\n\r\n  public BlogPosts: Array<Post> = new Array<Post>();\r\n\r\n  public CreatedBy: User;\r\n}","import { Injectable } from '@angular/core';\nimport {Blog} from 'src/app/Models/Blog';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport config from 'src/app/config/config.json';\nimport { map } from 'rxjs/operators';\nimport { BlogAdapter } from '../../Adapters/BlogAdapter';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(\n    private authService: AuthService,\n    private http: HttpClient,\n    private adapter: BlogAdapter\n  ) { }\n\n  GetBlogByID(blogID:  number | string) :Observable<Blog> {\n    let url = config.apiUrl+config.getBlogByIdUrl+blogID;\n    let blog = this.http.get<Blog>(url).pipe(\n     map(data => this.adapter.adapt(data))\n   );\n   return blog;\n  }\n\n  GetBlogByUserID(userID: number | string) :Observable<Blog>{\n    let url = config.apiUrl+config.getBlogByUserIdUrl+userID;\n    let blog = this.http.get<Blog>(url).pipe(\n     map(data => this.adapter.adapt(data))\n   );\n   return blog;\n  }\n\n  UpdateBlog(blog: Blog) :Observable<boolean> {\n    let token = this.authService.GetAuthToken();\n    let url = config.apiUrl+config.updateBlogUrl;\n    return this.http.post<boolean>(url, blog, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    });\n  }\n\n  CreateBlog(blog: Blog): Observable<boolean> {\n    let token = this.authService.GetAuthToken();\n    let url = config.apiUrl+config.createBlogUrl;\n    return this.http.post<boolean>(url, blog, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/Adapters/BlogAdapter.ts","./src/app/Models/Blog.ts","./src/app/Services/blog/blog.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IAdapter } from './IAdapter';\r\nimport { Blog } from 'src/app/Models/Blog';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BlogAdapter implements IAdapter<Blog> {\r\n\r\n  adapt(item: any): Blog {\r\n    if(item==null) return null;\r\n\r\n    var blog = new Blog();\r\n    blog.Id = item.Id;\r\n    blog.BlogTitle = item.BlogTitle;\r\n    blog.BlogCategories = item.BlogCategories;\r\n    blog.BlogPosts = item.BlogPosts;\r\n    blog.CreationDate = new Date(item.CreationDate);\r\n    return blog;\r\n  }\r\n}","\r\nimport {Category} from 'src/app/Models/Category';\r\nimport { Post } from './Post';\r\nimport { User } from './User';\r\n\r\nexport class Blog {\r\n\r\n  public Id: number;\r\n\r\n  public BlogTitle: string;\r\n\r\n  public CreationDate: Date;\r\n\r\n  public BlogCategories: Array<Category> = new Array<Category>();\r\n\r\n  public BlogPosts: Array<Post> = new Array<Post>();\r\n\r\n  public CreatedBy: User;\r\n}","import { Injectable } from '@angular/core';\nimport {Blog} from 'src/app/Models/Blog';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport config from 'src/app/config/config.json';\nimport { map } from 'rxjs/operators';\nimport { BlogAdapter } from '../../Adapters/BlogAdapter';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(\n    private authService: AuthService,\n    private http: HttpClient,\n    private adapter: BlogAdapter\n  ) { }\n\n  GetBlogByID(blogID:  number | string) :Observable<Blog> {\n    let url = config.apiUrl+config.getBlogByIdUrl+blogID;\n    let blog = this.http.get<Blog>(url).pipe(\n     map(data => this.adapter.adapt(data))\n   );\n   return blog;\n  }\n\n  GetBlogByUserID(userID: number | string) :Observable<Blog>{\n    let url = config.apiUrl+config.getBlogByUserIdUrl+userID;\n    let blog = this.http.get<Blog>(url).pipe(\n     map(data => this.adapter.adapt(data))\n   );\n   return blog;\n  }\n\n  UpdateBlog(blog: Blog) :Observable<boolean> {\n    let token = this.authService.GetAuthToken();\n    let url = config.apiUrl+config.updateBlogUrl;\n    return this.http.post<boolean>(url, blog, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    });\n  }\n\n  CreateBlog(blog: Blog): Observable<boolean> {\n    let token = this.authService.GetAuthToken();\n    let url = config.apiUrl+config.createBlogUrl;\n    return this.http.post<boolean>(url, blog, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
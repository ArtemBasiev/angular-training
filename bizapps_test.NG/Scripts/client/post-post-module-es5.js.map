{"version":3,"sources":["src/app/post/post.component.html","src/app/Adapters/PostAdapter.ts","src/app/Models/Post.ts","src/app/post/post-routing.module.ts","src/app/post/post.component.css","src/app/post/post.component.ts","src/app/post/post.module.ts","src/app/post/post.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div id=\\\"postView\\\" class=\\\" col-lg-9 PostViewContainer\\\">\\r\\n    <input id=\\\"postId\\\" [value]=\\\"post.Id\\\" type=\\\"hidden\\\" />\\r\\n    <img src=\\\"/Images/Default.jpeg\\\" class=\\\"postimage\\\">\\r\\n      <h2 id=\\\"PostTitle\\\">{{post.PostTitle}}</h2>\\r\\n      <label id=\\\"labelDate\\\" class=\\\"text-right\\\"></label>\\r\\n    <div class=\\\"divBodyHolder\\\" id=\\\"divBodyHolder\\\" >{{post.PostContent}}</div>\\r\\n      Categories:\\r\\n      <ul *ngFor=\\\"let category of post.PostCategories\\\" class=\\\"list-inline\\\" style=\\\"font-style: italic;\\\">\\r\\n        <li>\\r\\n          <span>{{category.CategoryName}}</span>\\r\\n        </li>\\r\\n      </ul>\\r\\n    <br/>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { IAdapter } from './IAdapter';\r\nimport { Post } from 'src/app/Models/Post';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PostAdapter implements IAdapter<Post> {\r\n\r\n  adapt(item: any): Post {\r\n    if(item==null) return null;\r\n\r\n    var post = new Post();\r\n    post.Id = item.Id;\r\n    post.PostContent = item.PostContent;\r\n    post.PostTitle = item.PostTitle;\r\n    post.PostCategories = item.PostCategories;\r\n    post.CreationDate = new Date(item.CreationDate);\r\n    return post;\r\n  }\r\n}","\r\nimport {Category} from 'src/app/Models/Category';\r\n\r\nexport class Post {\r\n\r\n  public Id: number;\r\n\r\n  public PostTitle: string;\r\n\r\n  public PostContent: string;\r\n\r\n  public CreationDate: Date;\r\n\r\n  public PostCategories: Array<Category> = new Array<Category>();\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostComponent } from './post.component';\n\n\nconst routes: Routes = [\n  { path: 'post/:id', redirectTo: '/blogpost/:id' },\n  { path: 'blogpost/:id', component: PostComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PostRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from './post.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Post} from 'src/app/Models/Post';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post: Post = new Post();\n  private postId: number | string;\n\n  constructor(\n    private postService: PostService,\n    private route: ActivatedRoute,\n    private router: Router\n    ) {\n      this.route.params.subscribe(param => {\n        this.postId = param['id'];\n      });\n   }\n\n  ngOnInit() {\n    this.postService.GetPostByID(this.postId).subscribe( (data: Post) => {\n    this.post = { ...data }\n    if(this.post.Id == undefined || 0){\n      this.router.navigate(['/404']);\n     }});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PostRoutingModule } from './post-routing.module';\nimport { PostComponent } from './post.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    PostComponent\n  ],\n  imports: [\n    CommonModule,\n    PostRoutingModule\n  ],\n  providers: [PostService]\n})\nexport class PostModule { }\n","import { Injectable } from '@angular/core';\nimport {Post} from 'src/app/Models/Post';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport config from 'src/app/config/config.json';\nimport { map } from 'rxjs/operators';\nimport { PostAdapter } from '../Adapters/PostAdapter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(\n    private http: HttpClient,\n    private adapter: PostAdapter\n    ) { }\n\n  GetPostByID(postID:  number | string) :Observable<Post> {\n    let url = config.apiUrl+config.getPostByIdUrl+postID;\n   let post = this.http.get<Post>(url).pipe(\n     map(data => this.adapter.adapt(data))\n   );\n   return (post as Observable<Post>);\n  }\n}\n\n\n\n"],"sourceRoot":"webpack:///"}
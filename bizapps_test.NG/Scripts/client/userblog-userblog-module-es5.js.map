{"version":3,"sources":["src/app/userblog/createblog/createblog.component.html","src/app/userblog/userblog.component.html","src/app/userblog/createblog/createblog.component.css","src/app/userblog/createblog/createblog.component.ts","src/app/userblog/userblog-routing.module.ts","src/app/userblog/userblog.component.css","src/app/userblog/userblog.component.ts","src/app/userblog/userblog.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div id=\\\"divCreateBlog\\\" class=\\\"main-container\\\">\\n    <form [formGroup]=\\\"createBlogForm\\\" (ngSubmit)=\\\"createBlog(createBlogForm.value)\\\">\\n            <h4>Create your blog here</h4><br /><br />\\n            <span>Blog title</span>\\n            <input id=\\\"textBlogTitle\\\" name=\\\"BlogTitle\\\" type=\\\"text\\\" /><br />\\n            <button class=\\\"buttonOnWhitePanel\\\" type=\\\"submit\\\">Create</button>\\n            <span id=\\\"blogcreation-message\\\" style=\\\"color: red\\\"></span>\\n            <span id=\\\"blogcreationValidationMessage\\\" class=\\\"validation-message\\\" >Blog Title can't be empty!</span> \\n    </form>\\n</div>\\n\"","export default \"<div id=\\\"userblog\\\">\\n    <div id=\\\"divEditBlog\\\" >\\n        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n            <li [class.active]=\\\"activeTabId=='blog'\\\" class=\\\"tab\\\"><a (click)=\\\"showTab('blog')\\\">Blog info</a></li>\\n            <li [class.active]=\\\"activeTabId=='post'\\\" class=\\\"tab\\\"><a (click)=\\\"showTab('post')\\\">Posts</a></li>\\n            <li [class.active]=\\\"activeTabId=='category'\\\" class=\\\"tab\\\"><a (click)=\\\"showTab('category')\\\">Categories</a></li>\\n        </ul>\\n        <div class=\\\"main-container\\\">\\n\\n            <div [class.hidden]=\\\"activeTabId!='blog'\\\" id=\\\"blog\\\" class=\\\"div-tab\\\">\\n                <input id=\\\"blogid\\\" type=\\\"hidden\\\" data-bind=\\\"value: ViewModelsKO.EditableBlogViewModel.blogId\\\" />\\n                <span>Your blog: </span>\\n                <p>\\n                    <button class=\\\"glyph-btn\\\" (click)=\\\"toggleEditMod()\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i>...</button>\\n                    <span [class.hidden]=\\\"editModIsEnabled\\\" id=\\\"spanBlogTitle\\\">{{userBlog.BlogTitle}}</span>\\n                    <input [class.hidden]=\\\"editModIsEnabled==false\\\" id=\\\"textEditableBlogTitle\\\" type=\\\"text\\\" style=\\\"width: 100px;\\\" [(ngModel)]=\\\"userBlog.BlogTitle\\\" />\\n                    <button [class.hidden]=\\\"editModIsEnabled==false\\\" id=\\\"btnSaveBlog\\\" class=\\\"glyph-btn btn-save\\\" (click)=\\\"updateBlog()\\\">Save</button>\\n                    <span id=\\\"blogTitleValidationMessage\\\" class=\\\"validation-message\\\">Blog Title can't be empty!</span>\\n                </p>\\n\\n                <a routerLink=\\\"/blog/{{userBlog.Id}}\\\" class=\\\"buttonOnWhitePanel\\\">Review</a>\\n                <button class=\\\"btn btn-danger\\\">Delete</button>\\n            </div>\\n\\n            <div [class.hidden]=\\\"activeTabId!='post'\\\" id=\\\"posts\\\"  class=\\\"div-tab\\\">\\n                <h4>Your posts:</h4>\\n                <ul class=\\\"CategoryList\\\">\\n                    <li *ngFor=\\\"let post of userBlog.BlogPosts\\\">\\n                        <input class=\\\"hidden-postid\\\" type=\\\"hidden\\\" [value]=\\\"post.Id\\\" />\\n                        <button class=\\\"glyph-btn\\\" onclick=\\\"PostCRUD.EnablePostEditing($(this));\\\" data-toggle=\\\"editpost\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i>...</button>\\n                        <button class=\\\"glyph-btn\\\" onclick=\\\"PostCRUD.DeletePost($(this));\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                        <span>{{post.PostTitle}}</span>\\n                    </li>\\n                </ul>\\n                <a onclick=\\\"PostCRUD.EnablePostCreation($(this));\\\" data-toggle=\\\"editpost\\\" style=\\\"cursor: pointer;\\\">To post creation...</a>\\n            </div>\\n        \\n            <div [class.hidden]=\\\"activeTabId!='category'\\\" id=\\\"categories\\\" style=\\\"display: none;\\\" class=\\\"div-tab\\\" >\\n                <h4>Your categories:</h4>\\n                <ul class=\\\"CategoryList\\\">\\n                    <li *ngFor=\\\"let category of userBlog.BlogCategories\\\">\\n                        <input class=\\\"hidden-categoryid\\\" type=\\\"hidden\\\" [value]=\\\"category.Id\\\" />\\n                        <button class=\\\"glyph-btn\\\" onclick=\\\"CategoryCRUD.EnableCategoryEditing($(this));\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i>...</button>\\n                        <button class=\\\"glyph-btn\\\" onclick=\\\"CategoryCRUD.DeleteCategory($(this));\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                        <span class=\\\"span-categoryname\\\">{{category.CategoryName}}</span>\\n                        <input class=\\\"text-categoryedit\\\" type=\\\"text\\\" style=\\\"width: 100px;\\\" [(ngModel)]=\\\"category.CategoryName\\\"/>\\n                        <button class=\\\"glyph-btn btn-save\\\" style=\\\"display: none;\\\" onclick=\\\"CategoryCRUD.SaveCategoryChanges($(this));\\\">Save</button>\\n                        <span class=\\\"category-validation-message validation-message\\\">Category Name can't be empty!</span>\\n                    </li>\\n                </ul><br/>\\n                     <p style=\\\"margin-bottom: 0; padding-bottom: 5px; padding-top: 5px;\\\">\\n                         <b> <label>Category name:</label> </b>\\n                         <input id=\\\"textCategoryName\\\" type=\\\"text\\\" class=\\\"textboxPostTitle\\\" style=\\\"width: 250px;\\\" />\\n                         <button id=\\\"ButtonCreateCategory\\\" onclick=\\\"CategoryCRUD.CreateCategory();\\\" class=\\\"buttonOnWhitePanel\\\">Create</button>\\n                         <span id=\\\"spanCategoryErrorMessage\\\" class=\\\"validation-message\\\">Category Name can't be empty!</span>\\n                     </p>\\n               \\n                \\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJibG9nL2NyZWF0ZWJsb2cvY3JlYXRlYmxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { BlogService } from 'src/app/Services/blog/blog.service';\nimport { Blog } from 'src/app/Models/Blog';\nimport { User } from 'src/app/Models/User';\n\n@Component({\n  selector: 'app-createblog',\n  templateUrl: './createblog.component.html',\n  styleUrls: ['./createblog.component.css']\n})\nexport class CreateblogComponent implements OnInit {\n\n  createBlogForm;\n\n  constructor(\n    private cookieService: CookieService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private blogService: BlogService\n  ) { \n    this.createBlogForm = this.formBuilder.group({\n      BlogTitle: ''\n    });\n  }\n\n  ngOnInit() {\n\n    let userId = this.cookieService.get(\"userid\");\n    this.blogService.GetBlogByUserID(userId).subscribe((result: Blog)=>{\n      if(result!=null){\n        this.router.navigate([\"/blog\"]);\n      }\n    })\n  }\n\n  createBlog(blogData){\n    let blogTitle = blogData.BlogTitle;\n    let userId = this.cookieService.get(\"userid\");\n    if(userId!=\"\"){\n\n      let blogDto = new Blog();\n      blogDto.BlogTitle = blogTitle;\n      let user = new User();\n      user.Id = parseInt(userId, 10);\n      blogDto.CreatedBy = user;\n      this.blogService.CreateBlog(blogDto).subscribe((result: boolean)=>{\n        if(result){\n          this.router.navigate([\"/blog\"])\n        }\n      });\n\n    } else {\n      this.router.navigate([\"\"]);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserblogComponent } from './userblog.component';\r\nimport { CreateblogComponent } from './createblog/createblog.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'blog', component: UserblogComponent },\r\n  { path: 'createblog', component: CreateblogComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserblogRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJibG9nL3VzZXJibG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Blog } from '../Models/Blog';\nimport { BlogService } from '../Services/blog/blog.service';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-userblog',\n  templateUrl: './userblog.component.html',\n  styleUrls: ['./userblog.component.css']\n})\nexport class UserblogComponent implements OnInit {\n\n  userBlog: Blog;\n  activeTabId: string = \"blog\";\n  userId: number | string;\n  editModIsEnabled: boolean = false;\n\n  constructor(\n    private blogService: BlogService,\n    private router: Router,\n    private cookieService: CookieService\n  ) {\n      this.userId = cookieService.get(\"userid\");\n   }\n\n  ngOnInit() {\n\n    if(this.userId!=\"\"){\n      this.blogService.GetBlogByUserID(this.userId).subscribe( (data: Blog) => {\n        this.userBlog = { ...data };\n  \n        if(this.userBlog.Id == undefined || 0){\n          this.router.navigate(['/createblog']);\n         }});\n    } else {\n      this.router.navigate(['']);\n    }\n    \n  }\n\n  showTab(tabId: string){\n      this.activeTabId = tabId;\n  }\n\n  toggleEditMod(){\n    this.editModIsEnabled = !this.editModIsEnabled;\n  }\n\n\n  updateBlog(){\n    this.blogService.UpdateBlog(this.userBlog).subscribe(\n      (result: boolean) =>{\n        if(result){\n          this.editModIsEnabled = false;\n        }\n      }\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserblogComponent } from './userblog.component';\nimport { UserblogRoutingModule } from './userblog-routing.module';\nimport { BlogService } from '../Services/blog/blog.service';\nimport { FormsModule } from '@angular/forms';\nimport { CreateblogComponent } from './createblog/createblog.component';\n\n\n\n@NgModule({\n  declarations: [UserblogComponent, CreateblogComponent],\n  imports: [\n    CommonModule,\n    UserblogRoutingModule,\n    FormsModule\n  ],\n  providers: [BlogService]\n})\nexport class UserblogModule { }\n"],"sourceRoot":"webpack:///"}